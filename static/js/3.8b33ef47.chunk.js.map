{"version":3,"sources":["hoc/withAuthRedirect.js","components/content/profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/content/profile/MyPosts/MyPosts.module.css","components/content/profile/MyPosts/Post/Post.module.css","components/content/profile/Profile.module.css","components/content/profile/MyPosts/ProfileInfo/profileStatus/ProfileStatusWithHooks.js","components/content/profile/MyPosts/ProfileInfo/ProfileInfo.js","components/content/profile/MyPosts/Post/Post.jsx","components/content/profile/MyPosts/MyPosts.jsx","components/content/profile/MyPosts/MyPostsContainer.jsx","components/content/profile/Profile.js","components/content/profile/ProfileContainer.js"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatusUser","onDoubleClick","ProfileInfo","profile","photos","className","styles","main","src","large","Preloader","Post","active","http","message","countLikes","maxLength","maxLengthCreator","minLength","minLengthCreator","MyPostsFormRedux","reduxForm","form","onSubmit","handleSubmit","textarea","Field","component","Textarea","name","validate","required","buttons","MyPosts","postsElements","profilesPage","posts","map","p","key","id","my_post","formData","addNewPost","newPostText","MyPostsContainer","dispatch","createAddPostAction","Profile","text","ProfileContainer","userId","match","params","userIdDefault","history","push","getUser","getStatusUser","mapDispatchToProps","getUserThunk","getStatusUserThunk","updateStatusUserThunk","compose","withRouter"],"mappings":"8OAKIA,EAA0B,SAACC,GAC3B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OADhB,kBAAC,IAAD,CAAUC,GAAG,eAJW,GACXC,IAAML,WAOtC,OAAOM,YAAQX,EAAyB,KAAjCW,CAAuCL,K,oBClBlDM,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,4B,oBCA1DD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,yBAAyB,QAAU,2B,oBCApGD,EAAOC,QAAU,CAAC,OAAS,uB,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,sIC+BbC,EA9BgB,SAACN,GAAW,IAAD,EACRO,oBAAS,GADD,mBACjCC,EADiC,KACvBC,EADuB,OAEZF,mBAASP,EAAMU,QAFH,mBAEjCA,EAFiC,KAEzBC,EAFyB,KAItCC,qBAAU,WAAQD,EAAUX,EAAMU,UAAW,CAACV,EAAMU,SAcpD,OACI,oCACKF,GAAY,6BACT,2BAAOK,SAPI,SAACC,GACpBH,EAAUG,EAAEC,cAAcC,QAMeC,WAAW,EAAMD,MAAON,EAAQQ,OAZpD,WACrBT,GAAY,GACZT,EAAMmB,iBAAiBT,QAYjBF,GAAY,6BACV,0BAAMY,cAlBM,WACpBX,GAAY,KAiBmCT,EAAMU,QAAU,gBCGxDW,EAxBK,SAACrB,GAEjB,OAAKA,EAAMsB,QAAQC,OAIf,6BACI,yBAAKC,UAAWC,IAAOC,MACnB,yBAAKC,IAAK3B,EAAMsB,QAAQC,OAAOK,SAQnC,6BACI,kBAAC,EAAD,CAAwBlB,OAAQV,EAAMU,OAAQS,iBAAkBnB,EAAMmB,qBAdvE,kBAACU,EAAA,EAAD,O,4CCMAC,EAXF,SAAC9B,GACZ,OACE,yBAAKwB,UAAWC,IAAOM,QACrB,yBAAKJ,IAAK3B,EAAMgC,OACfhC,EAAMiC,QACP,6BACE,wCAAcjC,EAAMkC,YACpB,8C,iCCAFC,EAAYC,YAHN,IAINC,EAAYC,YAHN,GAmCNC,EAAmBC,YAAU,CAAEC,KAAM,eAAlBD,EAbL,SAACxC,GACnB,OACE,0BAAM0C,SAAU1C,EAAM2C,cACpB,yBAAKnB,UAAWC,IAAOmB,UACrB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAK,cAAcC,SAAU,CAACC,IAAUf,EAAWE,MAEjF,yBAAKb,UAAWC,IAAO0B,SACrB,iDASOC,EAjCC,SAACpD,GACf,IAAIqD,EAAgBrD,EAAMsD,aAAaC,MAAMC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMC,IAAKD,EAAEE,GAAIzB,WAAYuB,EAAEvB,WAAYD,QAASwB,EAAExB,QAASD,KAAMyB,EAAEzB,UAO7H,OAEE,yBAAKR,UAAWC,IAAOM,QACrB,wBAAIP,UAAWC,IAAOmC,SAAtB,WACA,kBAACrB,EAAD,CAAkBG,SATJ,SAACmB,GACjB7D,EAAM8D,WAAWD,EAASE,gBASvBV,I,QCNQW,EAFQ7D,aAZD,SAACV,GACrB,MAAO,CACL6D,aAAc7D,EAAM6D,iBAIC,SAACW,GACxB,MAAO,CACLH,WAAY,SAACC,GAAkBE,EAASC,YAAoBH,QAIzC5D,CAA6CiD,G,kBCCrDe,EAdC,SAAC,GAAyC,IAAxC7C,EAAuC,EAAvCA,QAASZ,EAA8B,EAA9BA,OAAQS,EAAsB,EAAtBA,iBAEjC,OACE,yBAAKK,UAAWC,IAAOH,SACrB,kBAAC,EAAD,CACEA,QAASA,EACTZ,OAAQA,EACRS,iBAAkBA,EAClBiD,KAAK,oBACLzC,IAAI,2GACN,kBAAC,EAAD,Q,wBCPA0C,E,4LAGF,IAAIC,EAASvE,KAAKC,MAAMuE,MAAMC,OAAOF,OAChCA,IACHA,EAASvE,KAAKC,MAAMyE,gBAElB1E,KAAKC,MAAM0E,QAAQC,KAAK,YAG5B5E,KAAKC,MAAM4E,QAAQN,GACnBvE,KAAKC,MAAM6E,cAAcP,K,+BAKzB,OACE,kBAAC,EAAD,iBAAavE,KAAKC,MAAlB,CACEsB,QAASvB,KAAKC,MAAMsB,QACpBZ,OAAQX,KAAKC,MAAMU,OACnBS,iBAAkBpB,KAAKC,MAAMmB,wB,GApBNjB,IAAML,WAmCjCiF,EAAqB,CACvBF,QAASG,IACTF,cAAeG,IACf7D,iBAAkB8D,KAGLC,sBACb/E,aAhBoB,SAACV,GACrB,MAAO,CACL6B,QAAS7B,EAAM6D,aAAahC,QAC5BZ,OAAQjB,EAAM6D,aAAa5C,OAC3BhB,OAAQD,EAAME,KAAKD,OACnB+E,cAAehF,EAAME,KAAK2E,UAWHQ,GACzBlF,IACAuF,IAHaD,CAIbb","file":"static/js/3.8b33ef47.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth)\r\n                return <Redirect to=\"/login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    return connect(mapStateToPropsRedirect, null)(RedirectComponent);\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ProfileInfo_text__2kvPy\",\"main\":\"ProfileInfo_main__38i04\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"MyPosts_textarea__2LYsW\",\"my_post\":\"MyPosts_my_post__-ADWt\",\"buttons\":\"MyPosts_buttons__2xXGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Post_active__17JB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2mfIV\"};","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => { setStatus(props.status) }, [props.status]);\r\n\r\n    const setEditModeTrue = () => {\r\n        setEditMode(true);\r\n    }\r\n    const setEditModeFalse = () => {\r\n        setEditMode(false);\r\n        props.updateStatusUser(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {editMode && <div>\r\n                <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={setEditModeFalse} />\r\n            </div>}\r\n            {!editMode && <div>\r\n                <span onDoubleClick={setEditModeTrue}>{props.status || 'my status'}</span>\r\n            </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport Preloader from '../../../../preloader/Preloader';\r\nimport ProfileStatusWithHooks from './profileStatus/ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile.photos) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={styles.main}>\r\n                <img src={props.profile.photos.large} />\r\n            </div>\r\n            {/* <div>\r\n                <img src={props.src} />\r\n            </div> */}\r\n            {/* <div className={styles.text}>\r\n                {props.text}\r\n            </div> */}\r\n            <div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatusUser={props.updateStatusUser}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.active}>\r\n      <img src={props.http} />\r\n      {props.message}\r\n      <div>\r\n        <button>Like {props.countLikes}</button>\r\n        <button>disLike</button></div>\r\n    </div>\r\n  );\r\n}\r\nexport default Post;","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator, minLengthCreator } from '../../../../utils/validators/validators';\r\nimport { Textarea } from '../../../formsControls/FormsControls';\r\n\r\nconst max = 15;\r\nconst min = 2;\r\n\r\nconst maxLength = maxLengthCreator(max);\r\nconst minLength = minLengthCreator(min);\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.profilesPage.posts.map(p => <Post key={p.id} countLikes={p.countLikes} message={p.message} http={p.http} />);\r\n\r\n  const addMyPost = (formData) => {\r\n    props.addNewPost(formData.newPostText);\r\n  };\r\n\r\n\r\n  return (\r\n\r\n    <div className={styles.active}>\r\n      <h3 className={styles.my_post}>My Post</h3>\r\n      <MyPostsFormRedux onSubmit={addMyPost} />\r\n      {postsElements}\r\n    </div>\r\n  );\r\n}\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={styles.textarea}>\r\n        <Field component={Textarea} name='newPostText' validate={[required, maxLength, minLength]} />\r\n      </div>\r\n      <div className={styles.buttons}>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm({ form: 'myPostsForm' })(MyPostsForm);\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { createAddPostAction} from '../../../../redux/profiles-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profilesPage: state.profilesPage\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNewPost: (newPostText) => { dispatch(createAddPostAction(newPostText)) }\r\n  }\r\n};\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({profile, status, updateStatusUser}) => {\r\n\r\n  return (\r\n    <div className={styles.profile}>\r\n      <ProfileInfo\r\n        profile={profile}\r\n        status={status}\r\n        updateStatusUser={updateStatusUser}\r\n        text='ava + description'\r\n        src='https://p.bigstockphoto.com/GeFvQkBbSLaMdpKXF1Zv_bigstock-Aerial-View-Of-Blue-Lakes-And--227291596.jpg' />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { getUserThunk, getStatusUserThunk, updateStatusUserThunk } from '../../../redux/profiles-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.userIdDefault;\r\n      if (!userId) {\r\n        this.props.history.push(\"/dialogs\");\r\n      }\r\n    }\r\n    this.props.getUser(userId);\r\n    this.props.getStatusUser(userId);\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatusUser={this.props.updateStatusUser} />\r\n    );\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilesPage.profile,\r\n    status: state.profilesPage.status,\r\n    isAuth: state.auth.isAuth,\r\n    userIdDefault: state.auth.userId\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = {\r\n  getUser: getUserThunk,\r\n  getStatusUser: getStatusUserThunk,\r\n  updateStatusUser: updateStatusUserThunk\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect,\r\n  withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}