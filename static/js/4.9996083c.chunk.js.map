{"version":3,"sources":["hoc/withAuthRedirect.js","components/content/dialogs/Dialogs.module.css","components/content/dialogs/DialogItem/DialogItem.module.css","components/content/dialogs/MessageItem/MessageItem.module.css","components/content/dialogs/DialogItem/DialogItem.js","components/content/dialogs/MessageItem/MessageItem.js","components/content/dialogs/Dialogs.js","components/content/dialogs/DialogsContainer.js"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Dialog","path","id","className","styles","dialog","item","name","Message","message","maxLength","maxLengthCreator","minLength","minLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","key","messagesElements","messages","m","dialogs_items","formData","sendMessage","newMessageBody","compose","dispatch","createSendMessageBodyAction"],"mappings":"8OAKIA,EAA0B,SAACC,GAC3B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OADhB,kBAAC,IAAD,CAAUC,GAAG,eAJW,GACXC,IAAML,WAOtC,OAAOM,YAAQX,EAAyB,KAAjCW,CAAuCL,K,oBClBlDM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,KAAO,wB,oBCArPD,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,OAAS,2BAA2B,OAAS,6B,oBCAjHD,EAAOC,QAAU,CAAC,SAAW,8BAA8B,QAAU,6BAA6B,KAAO,4B,iHCY1FC,EATA,SAACN,GACZ,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACI,yBAAKC,UAAWC,IAAOC,QACnB,kBAAC,IAAD,CAASV,GAAIM,EAAME,UAAWC,IAAOE,MAAOZ,EAAMa,Q,kBCG/CC,EARC,SAACd,GACb,OACI,yBAAKS,UAAWC,IAAOK,SAClBf,EAAMe,U,yCCMbC,EAAYC,YAHN,IAINC,EAAYC,YAHN,GA+CNC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAdL,SAACrB,GACpB,OACI,0BAAMuB,SAAUvB,EAAMwB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,YAAY,qBAAqBf,KAAK,iBAC9DgB,SAAU,CAACC,IAAUd,EAAWE,MAExC,6BACI,6CAODa,EA3CC,SAAC/B,GACb,IAAIgC,EAAkBhC,EAAMiC,YAAYC,QAAQC,KAAI,SAAAC,GAChD,OAAO,kBAAC,EAAD,CAAQvB,KAAMuB,EAAEvB,KAAMwB,IAAKD,EAAE5B,GAAIA,GAAI4B,EAAE5B,QAE9C8B,EAAmBtC,EAAMiC,YAAYM,SAASJ,KAAI,SAAAK,GAClD,OAAO,kBAAC,EAAD,CAASzB,QAASyB,EAAEzB,QAASsB,IAAKG,EAAEhC,QAO/C,OAAKR,EAAMN,OAIP,yBAAKe,UAAWC,IAAOwB,SACnB,yBAAKzB,UAAWC,IAAO+B,eAClBT,GAEL,yBAAKvB,UAAWC,IAAO6B,UACnB,6BAAMD,GACN,kBAAClB,EAAD,CAAqBG,SAdb,SAACmB,GACjB1C,EAAM2C,YAAYD,EAASE,qBAIpB,kBAAC,IAAD,CAAU3C,GAAG,Y,wBCVb4C,sBACX1C,aAXkB,SAACV,GACnB,MAAO,CACHwC,YAAaxC,EAAMwC,gBAGF,SAACa,GACtB,MAAO,CACHH,YAAa,SAACC,GAAqBE,EAASC,YAA4BH,SAK5EhD,IAFWiD,CAGbd","file":"static/js/4.9996083c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth)\r\n                return <Redirect to=\"/login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    return connect(mapStateToPropsRedirect, null)(RedirectComponent);\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3aNuP\",\"dialogs_items\":\"Dialogs_dialogs_items__Hn2Np\",\"active\":\"Dialogs_active__1MnCF\",\"dialog\":\"Dialogs_dialog__3las0\",\"messages\":\"Dialogs_messages__2K15Z\",\"message\":\"Dialogs_message__2mS2Q\",\"item\":\"Dialogs_item__1wFLU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_items\":\"DialogItem_dialogs_items__WCr96\",\"active\":\"DialogItem_active__2ZMsG\",\"dialog\":\"DialogItem_dialog__2aq4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"MessageItem_messages__3ns9v\",\"message\":\"MessageItem_message__1fjv6\",\"item\":\"MessageItem_item__1Xbgr\"};","import React from 'react';\r\nimport styles from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dialog = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={styles.dialog}>\r\n            <NavLink to={path} className={styles.item}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport styles from './MessageItem.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={styles.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport Dialog from './DialogItem/DialogItem';\r\nimport Message from './MessageItem/MessageItem';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator, minLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../formsControls/FormsControls';\r\n\r\nconst max = 15;\r\nconst min = 2;\r\n\r\nconst maxLength = maxLengthCreator(max);\r\nconst minLength = minLengthCreator(min);\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => {\r\n        return <Dialog name={d.name} key={d.id} id={d.id} />\r\n    });\r\n    let messagesElements = props.dialogsPage.messages.map(m => {\r\n        return <Message message={m.message} key={m.id} />\r\n    });\r\n\r\n    let addNewMessade = (formData) => {\r\n        props.sendMessage(formData.newMessageBody);\r\n    };\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessade} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} placeholder='Enter your message' name='newMessageBody'\r\n                    validate={[required, maxLength, minLength]} />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\nexport default Dialogs;","import React from 'react';\r\nimport { createSendMessageBodyAction } from '../../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => { dispatch(createSendMessageBodyAction(newMessageBody)) }\r\n    };\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}